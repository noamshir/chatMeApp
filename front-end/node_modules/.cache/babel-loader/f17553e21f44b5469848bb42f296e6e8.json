{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMsgSend(_ref) {\n  _s();\n\n  let {\n    sendMsg,\n    chat,\n    user\n  } = _ref;\n  const [txt, setTxt] = useState('');\n  const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n  cons;\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setTxt(target.value);\n    socketService.emit(SOCKET_EMIT_TYPING, chat);\n  };\n\n  const onSendMsg = () => {\n    const msg = {\n      txt,\n      from: user,\n      sentAt: Date.now(),\n      viewers: [user._id]\n    };\n    sendMsg(msg);\n    setTxt('');\n  };\n\n  const handlePress = ev => {\n    if (ev.key === \"Enter\") onSendMsg();\n  };\n\n  const addEmoji = emoji => {\n    const str = txt + emoji;\n    setTxt(str);\n  };\n\n  const onFileSelected = async ev => {\n    try {\n      const file = ev.target.files[0];\n      const url = await chatService.uploadImg(file);\n      const msg = {\n        txt,\n        from: user,\n        sentAt: Date.now(),\n        viewers: [user._id],\n        imgUrl: url\n      };\n      sendMsg(msg);\n    } catch (error) {\n      console.log(\"failed in uploading img\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-send-container flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"msg-send-txt\",\n      value: txt,\n      onChange: handleChange,\n      placeholder: \"Type your message\",\n      onKeyPress: handlePress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-msg-btns flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsEmojiOpen(!isEmojiOpen),\n        className: \"btn-1\",\n        children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 85\n        }, this), isEmojiOpen && /*#__PURE__*/_jsxDEV(EmojiBox, {\n          addEmoji: addEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \"image/*\",\n        onInput: onFileSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"btn-2\",\n        children: /*#__PURE__*/_jsxDEV(AttachFileOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-3\",\n        onClick: onSendMsg,\n        children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMsgSend, \"Eo02i8KQjaXUaoGBUowEsX5ham8=\");\n\n_c = ChatMsgSend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMsgSend\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx"],"names":["React","useState","EmojiEmotionsOutlinedIcon","AttachFileOutlinedIcon","SendOutlinedIcon","socketService","SOCKET_EMIT_TYPING","EmojiBox","chatService","ChatMsgSend","sendMsg","chat","user","txt","setTxt","isEmojiOpen","setIsEmojiOpen","cons","handleChange","target","value","emit","onSendMsg","msg","from","sentAt","Date","now","viewers","_id","handlePress","ev","key","addEmoji","emoji","str","onFileSelected","file","files","url","uploadImg","imgUrl","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nexport default function ChatMsgSend({ sendMsg, chat, user }) {\n\n    const [txt, setTxt] = useState('');\n    const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n    cons\n\n    const handleChange = ({ target }) => {\n        setTxt(target.value)\n        socketService.emit(SOCKET_EMIT_TYPING, chat)\n    }\n\n    const onSendMsg = () => {\n        const msg = { txt, from: user, sentAt: Date.now(), viewers: [user._id] };\n        sendMsg(msg);\n        setTxt('');\n    }\n\n    const handlePress = ev => {\n        if (ev.key === \"Enter\")\n            onSendMsg();\n    }\n\n    const addEmoji = (emoji) => {\n        const str = txt + emoji;\n        setTxt(str);\n    }\n\n    const onFileSelected = async (ev) => {\n        try {\n            const file = ev.target.files[0];\n            const url = await chatService.uploadImg(file);\n            const msg = { txt, from: user, sentAt: Date.now(), viewers: [user._id], imgUrl: url }\n            sendMsg(msg);\n        } catch (error) {\n            console.log(\"failed in uploading img\");\n        }\n    }\n\n    return (\n        <div className=\"chat-send-container flex\">\n            <input type=\"text\" className=\"msg-send-txt\" value={txt} onChange={handleChange} placeholder=\"Type your message\" onKeyPress={handlePress} />\n            <div className=\"chat-msg-btns flex\" >\n                <div onClick={() => setIsEmojiOpen(!isEmojiOpen)} className=\"btn-1\"><EmojiEmotionsOutlinedIcon />\n                    {isEmojiOpen && <EmojiBox addEmoji={addEmoji} />}\n                </div>\n                <input type=\"file\" id=\"file\" accept=\"image/*\" onInput={onFileSelected} />\n                <label htmlFor=\"file\" className=\"btn-2\"><AttachFileOutlinedIcon /></label>\n                <button className=\"btn-3\" onClick={onSendMsg}><SendOutlinedIcon className=\"send-icon\" /></button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}