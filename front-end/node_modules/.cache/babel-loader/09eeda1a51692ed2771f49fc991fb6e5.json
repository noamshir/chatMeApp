{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sign/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log({\n        values\n      });\n    }\n  });\n  const LoginSchema = Yup.object().shape({\n    username: Yup.string().min(4, 'Too Short!').max(12, 'Too Long!').required('Required'),\n    password: Yup.string().min(4, 'Invalid password').max(12, 'Too Long!').required('Required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sign-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usename: '',\n        password: ''\n      },\n      validationSchema: LoginSchema,\n      onSubmit: values => {\n        console.log(values);\n      },\n      children: _ref => {\n        let {\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), errors.name && touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"sign-form flex column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          name: \"username\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.username,\n          autoComplete: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.password,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sign/SignIn.jsx"],"names":["React","useFormik","Formik","Form","Field","ErrorMessage","Yup","SignIn","formik","initialValues","username","password","onSubmit","values","console","log","LoginSchema","object","shape","string","min","max","required","usename","errors","touched","name","email","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nexport default function SignIn() {\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        onSubmit: values => {\n            console.log({ values })\n        },\n    });\n    const LoginSchema = Yup.object().shape({\n        username: Yup.string()\n            .min(4, 'Too Short!')\n            .max(12, 'Too Long!')\n            .required('Required'),\n        password: Yup.string()\n            .min(4, 'Invalid password')\n            .max(12, 'Too Long!')\n            .required('Required'),\n    });\n    return (\n        <section className=\"sign-modal\">\n            <Formik\n                initialValues={{\n                    usename: '',\n                    password: '',\n                }}\n                validationSchema={LoginSchema}\n                onSubmit={values => {\n                    console.log(values);\n                }}\n            >\n                {({ errors, touched }) => (\n                    <Form>\n                        <Field name=\"username\" />\n                        {errors.name && touched.name ? (\n                            <div>{errors.name}</div>\n                        ) : null}\n                        <ErrorMessage name=\"name\" />\n                        <Field name=\"email\" type=\"email\" />\n                        {errors.email && touched.email ? (\n                            <div>{errors.email}</div>\n                        ) : null}\n                        <ErrorMessage name=\"email\" />\n                        <button type=\"submit\">Submit</button>\n                    </Form>\n                )\n                }\n            </Formik >\n            <form onSubmit={formik.handleSubmit} className=\"sign-form flex column\">\n                <div className=\"flex column\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        id=\"username\"\n                        name=\"username\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.username}\n                        autoComplete=\"username\"\n                    />\n                </div>\n                <div className=\"flex column\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                        autoComplete=\"current-password\"\n                    />\n                </div>\n\n                <button type=\"submit\">Submit</button>\n                <button type=\"button\">clear</button>\n            </form>\n        </section >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}