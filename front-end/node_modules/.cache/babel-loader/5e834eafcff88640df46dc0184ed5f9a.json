{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { socketService, SOCKET_ON_TYPING } from '../../services/socket.service';\nimport ChatBubble from \"./ChatBubble\";\nimport NoMsg from './NoMsg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList(_ref) {\n  _s();\n\n  let {\n    msgs\n  } = _ref;\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    setSockets();\n    return () => {\n      clearSockets();\n    };\n  }, []);\n\n  const setSockets = () => {\n    socketService.on(SOCKET_ON_TYPING, chatId => {\n      setIsTyping(true);\n    });\n  };\n\n  const clearSockets = () => {\n    socketService.off(SOCKET_ON_TYPING);\n  };\n\n  const msgTyping = isTyping ? {\n    from: \"system\"\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-list\",\n    children: [msgs.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"clean-list\",\n      children: msgs.map(msg => {\n        return /*#__PURE__*/_jsxDEV(ChatBubble, {\n          msg: msg\n        }, msg.sentAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }, this), !msgs.length && /*#__PURE__*/_jsxDEV(NoMsg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatList, \"ompdN0WlZVZuZJm4UCLCAZwOUxU=\");\n\n_c = ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatList.jsx"],"names":["React","useEffect","useState","socketService","SOCKET_ON_TYPING","ChatBubble","NoMsg","ChatList","msgs","isTyping","setIsTyping","setSockets","clearSockets","on","chatId","off","msgTyping","from","length","map","msg","sentAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,+BAAhD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,eAAe,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAEvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACV,WAAO,MAAM;AACTC,MAAAA,YAAY;AACf,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMD,UAAU,GAAG,MAAM;AACrBR,IAAAA,aAAa,CAACU,EAAd,CAAiBT,gBAAjB,EAAoCU,MAAD,IAAY;AAC3CJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFD;AAGH,GAJD;;AAMA,QAAME,YAAY,GAAG,MAAM;AACvBT,IAAAA,aAAa,CAACY,GAAd,CAAkBX,gBAAlB;AACH,GAFD;;AAIA,QAAMY,SAAS,GAAEP,QAAD,GAAW;AAACQ,IAAAA,IAAI,EAAC;AAAN,GAAX,GAA2B,IAA3C;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,eACKT,IAAI,CAACU,MAAL,GAAc,CAAd,iBAAmB;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACfV,IAAI,CAACW,GAAL,CAASC,GAAG,IAAI;AACb,4BACI,QAAC,UAAD;AAAY,UAAA,GAAG,EAAEA;AAAjB,WAA2BA,GAAG,CAACC,MAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADe;AAAA;AAAA;AAAA;AAAA,YADxB,EAQK,CAACb,IAAI,CAACU,MAAN,iBAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YARrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAlCuBX,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { socketService, SOCKET_ON_TYPING } from '../../services/socket.service';\nimport ChatBubble from \"./ChatBubble\"\nimport NoMsg from './NoMsg'\nexport default function ChatList({ msgs }) {\n\n    const [isTyping, setIsTyping] = useState(false)\n\n    useEffect(() => {\n        setSockets();\n        return () => {\n            clearSockets();\n        }\n    }, [])\n\n    const setSockets = () => {\n        socketService.on(SOCKET_ON_TYPING, (chatId) => {\n            setIsTyping(true);\n        })\n    }\n\n    const clearSockets = () => {\n        socketService.off(SOCKET_ON_TYPING)\n    }\n     \n    const msgTyping=(isTyping)?{from:\"system\"}:null;\n    return (\n        <section className=\"chat-list\">\n            {msgs.length > 0 && <ul className=\"clean-list\">\n                {msgs.map(msg => {\n                    return (\n                        <ChatBubble msg={msg} key={msg.sentAt} />\n                    )\n                })}\n            </ul>}\n            {!msgs.length && <NoMsg />}\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}