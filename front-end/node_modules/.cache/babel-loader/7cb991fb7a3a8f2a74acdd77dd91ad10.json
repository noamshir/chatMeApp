{"ast":null,"code":"import { httpService } from \"./http.service\";\nimport { socketService, SOCKET_EMIT_NEWCHAT } from \"./socket.service\";\nexport const chatService = {\n  addChat,\n  getChatsByUser,\n  updateChat,\n  uploadImg\n};\nconst CLOUD_NAME = 'kapexe';\nconst UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\n\nasync function addChat(chat, id) {\n  try {\n    const addedChat = await httpService.post(\"chat\", chat);\n    const {\n      users\n    } = addedChat;\n    const reciver = users[0]._id === id ? users[1] : users[0];\n    socketService.emit(SOCKET_EMIT_NEWCHAT, {\n      chat: addedChat,\n      reciver\n    });\n    delete addedChat.users;\n    addedChat.user = reciver;\n    return addedChat;\n  } catch (error) {\n    console.log(\"error while adding chat to user: \", error);\n  }\n}\n\nasync function getChatsByUser() {\n  try {\n    return await httpService.get(\"chat/user-chats\");\n  } catch (error) {\n    console.log(\"error while getting chats of user: \", error);\n  }\n}\n\nasync function updateChat(chat) {\n  try {\n    return await httpService.put(\"chat\", chat);\n  } catch (error) {\n    console.log(\"error while updating chat: \", error);\n  }\n}\n\nasync function uploadImg(formData) {}","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/services/chat.service.js"],"names":["httpService","socketService","SOCKET_EMIT_NEWCHAT","chatService","addChat","getChatsByUser","updateChat","uploadImg","CLOUD_NAME","UPLOAD_URL","chat","id","addedChat","post","users","reciver","_id","emit","user","error","console","log","get","put","formData"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,kBAAnD;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA,cAFyB;AAGzBC,EAAAA,UAHyB;AAIzBC,EAAAA;AAJyB,CAApB;AAOP,MAAMC,UAAU,GAAG,QAAnB;AACI,MAAMC,UAAU,GAAI,mCAAkCD,UAAW,eAAjE;;AAEJ,eAAeJ,OAAf,CAAuBM,IAAvB,EAA6BC,EAA7B,EAAiC;AAC/B,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMZ,WAAW,CAACa,IAAZ,CAAiB,MAAjB,EAAyBH,IAAzB,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYF,SAAlB;AACA,UAAMG,OAAO,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,GAAT,KAAiBL,EAAjB,GAAsBG,KAAK,CAAC,CAAD,CAA3B,GAAiCA,KAAK,CAAC,CAAD,CAAtD;AACAb,IAAAA,aAAa,CAACgB,IAAd,CAAmBf,mBAAnB,EAAwC;AAAEQ,MAAAA,IAAI,EAAEE,SAAR;AAAmBG,MAAAA;AAAnB,KAAxC;AACA,WAAOH,SAAS,CAACE,KAAjB;AACAF,IAAAA,SAAS,CAACM,IAAV,GAAiBH,OAAjB;AACA,WAAOH,SAAP;AACD,GARD,CAQE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,KAAjD;AACD;AACF;;AAED,eAAed,cAAf,GAAgC;AAC9B,MAAI;AACF,WAAO,MAAML,WAAW,CAACsB,GAAZ,CAAgB,iBAAhB,CAAb;AACD,GAFD,CAEE,OAAOH,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,KAAnD;AACD;AACF;;AAED,eAAeb,UAAf,CAA0BI,IAA1B,EAAgC;AAC9B,MAAI;AACF,WAAO,MAAMV,WAAW,CAACuB,GAAZ,CAAgB,MAAhB,EAAwBb,IAAxB,CAAb;AACD,GAFD,CAEE,OAAOS,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,KAA3C;AACD;AACF;;AAED,eAAeZ,SAAf,CAAyBiB,QAAzB,EAAmC,CAElC","sourcesContent":["import { httpService } from \"./http.service\";\nimport { socketService, SOCKET_EMIT_NEWCHAT } from \"./socket.service\";\n\nexport const chatService = {\n  addChat,\n  getChatsByUser,\n  updateChat,\n  uploadImg,\n};\n\nconst CLOUD_NAME = 'kapexe'\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\nasync function addChat(chat, id) {\n  try {\n    const addedChat = await httpService.post(\"chat\", chat);\n    const { users } = addedChat;\n    const reciver = users[0]._id === id ? users[1] : users[0];\n    socketService.emit(SOCKET_EMIT_NEWCHAT, { chat: addedChat, reciver });\n    delete addedChat.users;\n    addedChat.user = reciver;\n    return addedChat;\n  } catch (error) {\n    console.log(\"error while adding chat to user: \", error);\n  }\n}\n\nasync function getChatsByUser() {\n  try {\n    return await httpService.get(\"chat/user-chats\");\n  } catch (error) {\n    console.log(\"error while getting chats of user: \", error);\n  }\n}\n\nasync function updateChat(chat) {\n  try {\n    return await httpService.put(\"chat\", chat);\n  } catch (error) {\n    console.log(\"error while updating chat: \", error);\n  }\n}\n\nasync function uploadImg(formData) {\n\n}\n"]},"metadata":{},"sourceType":"module"}