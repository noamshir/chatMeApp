{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMsgSend(_ref) {\n  _s();\n\n  let {\n    sendMsg,\n    chat,\n    user\n  } = _ref;\n  const [txt, setTxt] = useState('');\n  const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [selectedImageSrc, setSelectedImageSrc] = useState('');\n  const [fileToSend, setFileToSend] = useState(null);\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setTxt(target.value);\n    socketService.emit(SOCKET_EMIT_TYPING, chat);\n  };\n\n  const onSendMsg = async () => {\n    let msg = {\n      txt,\n      from: user,\n      sentAt: Date.now(),\n      viewers: [user._id]\n    };\n\n    if (fileToSend) {\n      setIsSending(true);\n\n      try {\n        const url = await chatService.uploadImg(fileToSend);\n        msg.imgUrl = url;\n        await sendMsg(msg);\n        setIsSending(false);\n        setSelectedImageSrc('');\n        setFileToSend(null);\n      } catch (error) {\n        console.log(\"failed in uploading img\");\n        setSelectedImageSrc('');\n        setFileToSend(null);\n        return;\n      }\n    } else {\n      await sendMsg(msg);\n    }\n\n    setTxt('');\n  };\n\n  const handlePress = ev => {\n    if (ev.key === \"Enter\") {\n      onSendMsg();\n    }\n  };\n\n  const addEmoji = emoji => {\n    const str = txt + emoji;\n    setTxt(str);\n  };\n\n  const onFileSelected = _ref3 => {\n    let {\n      target\n    } = _ref3;\n    const file = target.files[0];\n    previewImage(file);\n    setFileToSend(file);\n  };\n\n  const previewImage = file => {\n    const reader = new FileReader();\n\n    reader.onload = _ref4 => {\n      let {\n        target\n      } = _ref4;\n      setSelectedImageSrc(target.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const onRemoveUserFiles = () => {\n    setSelectedImageSrc('');\n    setFileToSend(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-send-container flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"msg-send-txt\",\n      value: txt,\n      onChange: handleChange,\n      placeholder: \"Type your message\",\n      onKeyPress: handlePress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), selectedImageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"selected-img-preview\",\n      src: selectedImageSrc,\n      onClick: onRemoveUserFiles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remove-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-msg-btns flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsEmojiOpen(!isEmojiOpen),\n        className: \"btn-1\",\n        children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 85\n        }, this), isEmojiOpen && /*#__PURE__*/_jsxDEV(EmojiBox, {\n          addEmoji: addEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \"image/*\",\n        onInput: onFileSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"img-pick-btn\",\n        children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-3\",\n        onClick: onSendMsg,\n        children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sending-msg-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMsgSend, \"4k1rwWaZ6tSxoVUKe9N0plX1zMY=\");\n\n_c = ChatMsgSend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMsgSend\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx"],"names":["React","useState","EmojiEmotionsOutlinedIcon","ImageIcon","SendOutlinedIcon","socketService","SOCKET_EMIT_TYPING","EmojiBox","chatService","Loader","ChatMsgSend","sendMsg","chat","user","txt","setTxt","isEmojiOpen","setIsEmojiOpen","isSending","setIsSending","selectedImageSrc","setSelectedImageSrc","fileToSend","setFileToSend","handleChange","target","value","emit","onSendMsg","msg","from","sentAt","Date","now","viewers","_id","url","uploadImg","imgUrl","error","console","log","handlePress","ev","key","addEmoji","emoji","str","onFileSelected","file","files","previewImage","reader","FileReader","onload","result","readAsDataURL","onRemoveUserFiles"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nimport Loader from '../Loader';\nexport default function ChatMsgSend({ sendMsg, chat, user }) {\n\n    const [txt, setTxt] = useState('');\n    const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n    const [isSending, setIsSending] = useState(false);\n    const [selectedImageSrc, setSelectedImageSrc] = useState('');\n    const [fileToSend, setFileToSend] = useState(null);\n\n    const handleChange = ({ target }) => {\n        setTxt(target.value)\n        socketService.emit(SOCKET_EMIT_TYPING, chat)\n    }\n\n    const onSendMsg = async () => {\n        let msg = { txt, from: user, sentAt: Date.now(), viewers: [user._id] };\n        if (fileToSend) {\n            setIsSending(true);\n            try {\n                const url = await chatService.uploadImg(fileToSend);\n                msg.imgUrl = url\n                await sendMsg(msg);\n                setIsSending(false);\n                setSelectedImageSrc('');\n                setFileToSend(null)\n            } catch (error) {\n                console.log(\"failed in uploading img\");\n                setSelectedImageSrc('');\n                setFileToSend(null)\n                return\n            }\n        }\n        else {\n            await sendMsg(msg)\n        }\n        setTxt('');\n\n    }\n\n    const handlePress = ev => {\n        if (ev.key === \"Enter\") {\n            onSendMsg();\n        }\n    }\n\n    const addEmoji = (emoji) => {\n        const str = txt + emoji;\n        setTxt(str);\n    }\n\n    const onFileSelected = ({ target }) => {\n        const file = target.files[0];\n        previewImage(file)\n        setFileToSend(file);\n    }\n\n    const previewImage = (file) => {\n        const reader = new FileReader();\n        reader.onload = ({ target }) => {\n            setSelectedImageSrc(target.result)\n        }\n        reader.readAsDataURL(file)\n    }\n\n    const onRemoveUserFiles = () => {\n        setSelectedImageSrc('');\n        setFileToSend(null)\n    }\n\n    return (\n        <div className=\"chat-send-container flex\">\n            <input type=\"text\" className=\"msg-send-txt\" value={txt} onChange={handleChange} placeholder=\"Type your message\" onKeyPress={handlePress} />\n            {selectedImageSrc && <img className=\"selected-img-preview\" src={selectedImageSrc} onClick={onRemoveUserFiles} >\n                <div className=\"remove-\"></div>\n                </img>}\n            <div className=\"chat-msg-btns flex\" >\n                <div onClick={() => setIsEmojiOpen(!isEmojiOpen)} className=\"btn-1\"><EmojiEmotionsOutlinedIcon />\n                    {isEmojiOpen && <EmojiBox addEmoji={addEmoji} />}\n                </div>\n                <input type=\"file\" id=\"file\" accept=\"image/*\" onInput={onFileSelected} />\n                <label htmlFor=\"file\" className=\"img-pick-btn\"><ImageIcon /></label>\n                <button className=\"btn-3\" onClick={onSendMsg}><SendOutlinedIcon className=\"send-icon\" /></button>\n            </div>\n            {isSending && <div className=\"sending-msg-container\">\n                <Loader />\n            </div>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}