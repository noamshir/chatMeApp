{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMsgSend(_ref) {\n  _s();\n\n  let {\n    sendMsg,\n    chat\n  } = _ref;\n  const [msg, setMsg] = useState('');\n  const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setMsg(target.value);\n    socketService.emit(SOCKET_EMIT_TYPING, chat);\n  };\n\n  const onSendMsg = () => {\n    sendMsg(msg);\n    setMsg('');\n  };\n\n  const handlePress = ev => {\n    if (ev.key === \"Enter\") onSendMsg();\n  };\n\n  const addEmoji = emoji => {\n    const str = msg + emoji;\n    setMsg(str);\n  };\n\n  const onFileSelected = ev => {\n    const url = uplof;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-send-container flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"msg-send-txt\",\n      value: msg,\n      onChange: handleChange,\n      placeholder: \"Type your message\",\n      onKeyPress: handlePress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-msg-btns flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsEmojiOpen(!isEmojiOpen),\n        className: \"btn-1\",\n        children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 85\n        }, this), isEmojiOpen && /*#__PURE__*/_jsxDEV(EmojiBox, {\n          addEmoji: addEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \"image/*\",\n        onInput: onFileSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"btn-2\",\n        children: /*#__PURE__*/_jsxDEV(AttachFileOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-3\",\n        onClick: onSendMsg,\n        children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMsgSend, \"/71qO85TpIims87ByqzBn8gLONg=\");\n\n_c = ChatMsgSend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMsgSend\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx"],"names":["React","useState","EmojiEmotionsOutlinedIcon","AttachFileOutlinedIcon","SendOutlinedIcon","socketService","SOCKET_EMIT_TYPING","EmojiBox","ChatMsgSend","sendMsg","chat","msg","setMsg","isEmojiOpen","setIsEmojiOpen","handleChange","target","value","emit","onSendMsg","handlePress","ev","key","addEmoji","emoji","str","onFileSelected","url","uplof"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,yBAAP,MAAsC,2CAAtC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,+BAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,eAAe,SAASC,WAAT,OAAwC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAmB;AACnD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMc,YAAY,GAAG,SAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACjCJ,IAAAA,MAAM,CAACI,MAAM,CAACC,KAAR,CAAN;AACAZ,IAAAA,aAAa,CAACa,IAAd,CAAmBZ,kBAAnB,EAAuCI,IAAvC;AACH,GAHD;;AAKA,QAAMS,SAAS,GAAG,MAAM;AACpBV,IAAAA,OAAO,CAACE,GAAD,CAAP;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AACH,GAHD;;AAKA,QAAMQ,WAAW,GAAGC,EAAE,IAAI;AACtB,QAAIA,EAAE,CAACC,GAAH,KAAW,OAAf,EACIH,SAAS;AAChB,GAHD;;AAKA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAMC,GAAG,GAAGd,GAAG,GAAGa,KAAlB;AACAZ,IAAAA,MAAM,CAACa,GAAD,CAAN;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAIL,EAAD,IAAQ;AAC3B,UAAMM,GAAG,GAACC,KAAV;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,KAAK,EAAEjB,GAAnD;AAAwD,MAAA,QAAQ,EAAEI,YAAlE;AAAgF,MAAA,WAAW,EAAC,mBAA5F;AAAgH,MAAA,UAAU,EAAEK;AAA5H;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,OAAO,EAAE,MAAMN,cAAc,CAAC,CAACD,WAAF,CAAlC;AAAkD,QAAA,SAAS,EAAC,OAA5D;AAAA,gCAAoE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,gBAApE,EACKA,WAAW,iBAAI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEU;AAApB;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,MAAM,EAAC,SAApC;AAA8C,QAAA,OAAO,EAAEG;AAAvD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC,OAAhC;AAAA,+BAAwC,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAEP,SAAnC;AAAA,+BAA8C,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxCuBX,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nexport default function ChatMsgSend({ sendMsg, chat }) {\n    const [msg, setMsg] = useState('');\n    const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n    const handleChange = ({ target }) => {\n        setMsg(target.value)\n        socketService.emit(SOCKET_EMIT_TYPING, chat)\n    }\n\n    const onSendMsg = () => {\n        sendMsg(msg);\n        setMsg('');\n    }\n\n    const handlePress = ev => {\n        if (ev.key === \"Enter\")\n            onSendMsg();\n    }\n\n    const addEmoji = (emoji) => {\n        const str = msg + emoji;\n        setMsg(str);\n    }\n\n    const onFileSelected = (ev) => {\n        const url=uplof\n    }\n\n    return (\n        <div className=\"chat-send-container flex\">\n            <input type=\"text\" className=\"msg-send-txt\" value={msg} onChange={handleChange} placeholder=\"Type your message\" onKeyPress={handlePress} />\n            <div className=\"chat-msg-btns flex\" >\n                <div onClick={() => setIsEmojiOpen(!isEmojiOpen)} className=\"btn-1\"><EmojiEmotionsOutlinedIcon />\n                    {isEmojiOpen && <EmojiBox addEmoji={addEmoji} />}\n                </div>\n                <input type=\"file\" id=\"file\" accept=\"image/*\" onInput={onFileSelected} />\n                <label htmlFor=\"file\" className=\"btn-2\"><AttachFileOutlinedIcon /></label>\n                <button className=\"btn-3\" onClick={onSendMsg}><SendOutlinedIcon className=\"send-icon\" /></button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}