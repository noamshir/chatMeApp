{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatHeader from './ChatHeader';\nimport ChatList from './ChatList';\nimport ChatMsgSend from './ChatMsgSend';\nimport { socketService, SOCKET_EMIT_CONNECTED, SOCKET_EMIT_NEWMSG, SOCKET_ON_ADDMSG } from '../../services/socket.service';\nimport NoMsg from './NoMsg';\nimport { ChatContext } from '../../context/chatContext';\nimport { addMsgToUser } from '../../store/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContent(_ref) {\n  _s();\n\n  let {\n    chat\n  } = _ref;\n  const user = useSelector(_ref2 => {\n    let {\n      userModule\n    } = _ref2;\n    return userModule.user;\n  });\n  const {\n    currChat\n  } = useContext(ChatContext);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setSockets();\n    return () => {\n      setSocketsOff();\n    };\n  }, []);\n\n  const setSockets = () => {\n    socketService.emit(SOCKET_EMIT_CONNECTED, user._id);\n    socketService.on(SOCKET_ON_ADDMSG, addMsgToChat);\n  };\n\n  const setSocketsOff = () => {\n    socketService.off(SOCKET_EMIT_CONNECTED);\n    socketService.on(SOCKET_ON_ADDMSG, addMsgToChat);\n  };\n\n  const addMsg = txt => {\n    const miniUser = { ...user\n    };\n    const msg = {\n      txt,\n      from: miniUser,\n      sentAt: Date.now()\n    };\n    socketService.emit(SOCKET_EMIT_NEWMSG, msg); // dispatch(addMsgToUser(msg));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat flex column\",\n    children: !chat || !chat.msgs ? /*#__PURE__*/_jsxDEV(NoMsg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        user: chat.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n        msgs: chat.msgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatMsgSend, {\n        sendMsg: addMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatContent, \"wKsgica8frTzp0HPcOz9idqybJM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChatContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContent\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatContent.jsx"],"names":["React","useState","useEffect","useContext","useDispatch","useSelector","ChatHeader","ChatList","ChatMsgSend","socketService","SOCKET_EMIT_CONNECTED","SOCKET_EMIT_NEWMSG","SOCKET_ON_ADDMSG","NoMsg","ChatContext","addMsgToUser","ChatContent","chat","user","userModule","currChat","dispatch","setSockets","setSocketsOff","emit","_id","on","addMsgToChat","off","addMsg","txt","miniUser","msg","from","sentAt","Date","now","msgs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,aAAT,EAAwBC,qBAAxB,EAA+CC,kBAA/C,EAAmEC,gBAAnE,QAA2F,+BAA3F;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAGA,eAAe,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1C,QAAMC,IAAI,GAAGb,WAAW,CAAC;AAAA,QAAC;AAAEc,MAAAA;AAAF,KAAD;AAAA,WAAoBA,UAAU,CAACD,IAA/B;AAAA,GAAD,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAejB,UAAU,CAACW,WAAD,CAA/B;AACA,QAAMO,QAAQ,GAAGjB,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,UAAU;AACV,WAAO,MAAM;AACTC,MAAAA,aAAa;AAChB,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMD,UAAU,GAAG,MAAM;AACrBb,IAAAA,aAAa,CAACe,IAAd,CAAmBd,qBAAnB,EAA0CQ,IAAI,CAACO,GAA/C;AACAhB,IAAAA,aAAa,CAACiB,EAAd,CAAiBd,gBAAjB,EAAmCe,YAAnC;AACH,GAHD;;AAIA,QAAMJ,aAAa,GAAG,MAAM;AACxBd,IAAAA,aAAa,CAACmB,GAAd,CAAkBlB,qBAAlB;AACQD,IAAAA,aAAa,CAACiB,EAAd,CAAiBd,gBAAjB,EAAmCe,YAAnC;AAEX,GAJD;;AAKA,QAAME,MAAM,GAAIC,GAAD,IAAS;AACpB,UAAMC,QAAQ,GAAG,EAAE,GAAGb;AAAL,KAAjB;AACA,UAAMc,GAAG,GAAG;AAAEF,MAAAA,GAAF;AAAOG,MAAAA,IAAI,EAAEF,QAAb;AAAuBG,MAAAA,MAAM,EAAEC,IAAI,CAACC,GAAL;AAA/B,KAAZ;AACA3B,IAAAA,aAAa,CAACe,IAAd,CAAmBb,kBAAnB,EAAuCqB,GAAvC,EAHoB,CAIpB;AACH,GALD;;AAMA,sBACI;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA,cACM,CAACf,IAAD,IAAS,CAACA,IAAI,CAACoB,IAAhB,gBAAwB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAxB,gBACG;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEpB,IAAI,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAI,CAACoB;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAER;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GApCuBb,W;UACPX,W,EAEID,W;;;KAHGY,W","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ChatHeader from './ChatHeader'\nimport ChatList from './ChatList'\nimport ChatMsgSend from './ChatMsgSend'\n\nimport { socketService, SOCKET_EMIT_CONNECTED, SOCKET_EMIT_NEWMSG, SOCKET_ON_ADDMSG } from '../../services/socket.service'\nimport NoMsg from './NoMsg'\nimport { ChatContext } from '../../context/chatContext'\nimport { addMsgToUser } from '../../store/user.action'\n\n\nexport default function ChatContent({ chat }) {\n    const user = useSelector(({ userModule }) => userModule.user);\n    const { currChat } = useContext(ChatContext);\n    const dispatch = useDispatch()\n    useEffect(() => {\n        setSockets()\n        return () => {\n            setSocketsOff();\n        }\n    }, [])\n    const setSockets = () => {\n        socketService.emit(SOCKET_EMIT_CONNECTED, user._id)\n        socketService.on(SOCKET_ON_ADDMSG, addMsgToChat)\n    }\n    const setSocketsOff = () => {\n        socketService.off(SOCKET_EMIT_CONNECTED);\n                socketService.on(SOCKET_ON_ADDMSG, addMsgToChat)\n\n    }\n    const addMsg = (txt) => {\n        const miniUser = { ...user };\n        const msg = { txt, from: miniUser, sentAt: Date.now() };\n        socketService.emit(SOCKET_EMIT_NEWMSG, msg);\n        // dispatch(addMsgToUser(msg));\n    }\n    return (\n        <section className=\"chat flex column\">\n            {(!chat || !chat.msgs) ? <NoMsg /> :\n                <>\n                    <ChatHeader user={chat.user} />\n                    <ChatList msgs={chat.msgs} />\n                    <ChatMsgSend sendMsg={addMsg} />\n                </>\n            }\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}