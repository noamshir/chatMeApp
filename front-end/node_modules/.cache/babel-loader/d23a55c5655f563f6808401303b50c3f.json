{"ast":null,"code":"import { chatService } from \"../services/chat.service\";\nexport function loadChats() {\n  return async dispatch => {\n    const chats = await chatService.getChatsByUser();\n    dispatch({\n      type: \"SET_CHATS\",\n      chats\n    });\n  };\n}\nexport function addChat(chat, user) {\n  return async dispatch => {\n    try {\n      const addedChat = await chatService.addChat(chat, user._id);\n      dispatch({\n        type: \"ADD_CHAT\",\n        chat: addedChat\n      });\n      return addedChat;\n    } catch (error) {\n      return null;\n    }\n  };\n}\nexport function socketAddChat(chat) {\n  return dispatch => {\n    dispatch({\n      type: \"ADD_CHAT\",\n      chat\n    });\n  };\n}","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/store/chat.action.js"],"names":["chatService","loadChats","dispatch","chats","getChatsByUser","type","addChat","chat","user","addedChat","_id","error","socketAddChat"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,KAAK,GAAG,MAAMH,WAAW,CAACI,cAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBF,MAAAA;AAArB,KAAD,CAAR;AACD,GAHD;AAID;AAEH,OAAO,SAASG,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAClC,SAAO,MAAON,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMO,SAAS,GAAG,MAAMT,WAAW,CAACM,OAAZ,CAAoBC,IAApB,EAA0BC,IAAI,CAACE,GAA/B,CAAxB;AACAR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBE,QAAAA,IAAI,EAAEE;AAA1B,OAAD,CAAR;AACA,aAAOA,SAAP;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACd,aAAO,IAAP;AACD;AACF,GARD;AASD;AAED,OAAO,SAASC,aAAT,CAAuBL,IAAvB,EAA6B;AAClC,SAAQL,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,UAAR;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACD,GAFD;AAGD","sourcesContent":["import { chatService } from \"../services/chat.service\";\n\nexport function loadChats() {\n    return async (dispatch) => {\n      const chats = await chatService.getChatsByUser();\n      dispatch({ type: \"SET_CHATS\", chats });\n    };\n  }\n\nexport function addChat(chat, user) {\n  return async (dispatch) => {\n    try {\n      const addedChat = await chatService.addChat(chat, user._id);\n      dispatch({ type: \"ADD_CHAT\", chat: addedChat });\n      return addedChat;\n    } catch (error) {\n      return null;\n    }\n  };\n}\n\nexport function socketAddChat(chat) {\n  return (dispatch) => {\n    dispatch({ type: \"ADD_CHAT\", chat });\n  };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}