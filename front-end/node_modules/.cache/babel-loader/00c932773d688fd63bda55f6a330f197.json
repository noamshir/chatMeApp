{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sidebar/ChatPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { ChatContext } from '../../context/chatContext';\nimport { utilService } from '../../services/util.service';\nimport UserProfileImage from '../profile/UserProfileImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatPreview(_ref) {\n  _s();\n\n  let {\n    chat\n  } = _ref;\n  const {\n    setChat\n  } = useContext(ChatContext);\n  const user = chat.user;\n  const unreadCount = utilService.getUnreadMsgCount(chat.msgs);\n\n  const onSetCurrentChat = () => {\n    setChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onSetCurrentChat,\n    className: \"chat-preview flex\",\n    children: [/*#__PURE__*/_jsxDEV(UserProfileImage, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-preview-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chat.msgs[0].txt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unread-count\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatPreview, \"ukjvF7y34uV28lCvda9ZUBI6M2Y=\");\n\n_c = ChatPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPreview\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sidebar/ChatPreview.jsx"],"names":["React","useContext","ChatContext","utilService","UserProfileImage","ChatPreview","chat","setChat","user","unreadCount","getUnreadMsgCount","msgs","onSetCurrentChat","username","txt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;;AACA,eAAe,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAcN,UAAU,CAACC,WAAD,CAA9B;AACA,QAAMM,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,QAAMC,WAAW,GAAGN,WAAW,CAACO,iBAAZ,CAA8BJ,IAAI,CAACK,IAAnC,CAApB;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEH,GAHD;;AAIA,sBACI;AAAK,IAAA,OAAO,EAAEM,gBAAd;AAAgC,IAAA,SAAS,EAAC,mBAA1C;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEJ;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAA,kBAAKA,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIP,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaG;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMML,WAAW,GAAG,CAAf,iBAAqB;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAClB;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADkB;AAAA;AAAA;AAAA;AAAA,YAN1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GApBuBJ,W;;KAAAA,W","sourcesContent":["import React, { useContext } from 'react'\nimport { ChatContext } from '../../context/chatContext'\nimport { utilService } from '../../services/util.service';\nimport UserProfileImage from '../profile/UserProfileImage'\nexport default function ChatPreview({ chat }) {\n    const { setChat } = useContext(ChatContext);\n    const user = chat.user;\n    const unreadCount = utilService.getUnreadMsgCount(chat.msgs);\n    const onSetCurrentChat = () => {\n        setChat(chat);\n        \n    }\n    return (\n        <div onClick={onSetCurrentChat} className=\"chat-preview flex\">\n            <UserProfileImage user={user} />\n            <div className=\"chat-preview-content\">\n                <h1>{user.username}</h1>\n                <p>{chat.msgs[0].txt}</p>\n            </div>\n            {(unreadCount > 0) && <div className=\"unread-count\">\n                <h1>{unreadCount}</h1>\n            </div>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}