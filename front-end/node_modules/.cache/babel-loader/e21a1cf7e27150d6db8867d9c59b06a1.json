{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMsgSend(_ref) {\n  _s();\n\n  let {\n    sendMsg,\n    chat,\n    user\n  } = _ref;\n  const [txt, setTxt] = useState('');\n  const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [selectedImageSrc, setSelectedImageSrc] = useState('');\n  usesta;\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setTxt(target.value);\n    socketService.emit(SOCKET_EMIT_TYPING, chat);\n  };\n\n  const onSendMsg = () => {\n    if (!selectedImageSrc) {\n      const msg = {\n        txt,\n        from: user,\n        sentAt: Date.now(),\n        viewers: [user._id]\n      };\n      sendMsg(msg);\n      setTxt('');\n    } else {}\n  };\n\n  const handlePress = ev => {\n    if (ev.key === \"Enter\") onSendMsg();\n  };\n\n  const addEmoji = emoji => {\n    const str = txt + emoji;\n    setTxt(str);\n  };\n\n  const onFileSelected = async ev => {\n    try {\n      const file = ev.target.files[0];\n      previewImage(file);\n      setIsSending(true);\n      const url = await chatService.uploadImg(file);\n      const msg = {\n        txt,\n        from: user,\n        sentAt: Date.now(),\n        viewers: [user._id],\n        imgUrl: url\n      };\n      sendMsg(msg);\n      setIsSending(false);\n    } catch (error) {\n      console.log(\"failed in uploading img\");\n      setSelectedImageSrc('');\n    }\n  };\n\n  const previewImage = file => {\n    const reader = new FileReader();\n\n    reader.onload = _ref3 => {\n      let {\n        target\n      } = _ref3;\n      setSelectedImageSrc(target.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-send-container flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"msg-send-txt\",\n      value: txt,\n      onChange: handleChange,\n      placeholder: \"Type your message\",\n      onKeyPress: handlePress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-msg-btns flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsEmojiOpen(!isEmojiOpen),\n        className: \"btn-1\",\n        children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 85\n        }, this), isEmojiOpen && /*#__PURE__*/_jsxDEV(EmojiBox, {\n          addEmoji: addEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \"image/*\",\n        onInput: onFileSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"img-pick-btn\",\n        children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-3\",\n        onClick: onSendMsg,\n        children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sending-msg-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }, this), selectedImageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedImageSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMsgSend, \"biRXG6pI+vaM+EkSHf2JmOnwBes=\");\n\n_c = ChatMsgSend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMsgSend\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatMsgSend.jsx"],"names":["React","useState","EmojiEmotionsOutlinedIcon","ImageIcon","SendOutlinedIcon","socketService","SOCKET_EMIT_TYPING","EmojiBox","chatService","Loader","ChatMsgSend","sendMsg","chat","user","txt","setTxt","isEmojiOpen","setIsEmojiOpen","isSending","setIsSending","selectedImageSrc","setSelectedImageSrc","usesta","handleChange","target","value","emit","onSendMsg","msg","from","sentAt","Date","now","viewers","_id","handlePress","ev","key","addEmoji","emoji","str","onFileSelected","file","files","previewImage","url","uploadImg","imgUrl","error","console","log","reader","FileReader","onload","result","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport { socketService, SOCKET_EMIT_TYPING } from '../../services/socket.service';\nimport EmojiBox from './EmojiBox';\nimport { chatService } from '../../services/chat.service';\nimport Loader from '../Loader';\nexport default function ChatMsgSend({ sendMsg, chat, user }) {\n\n    const [txt, setTxt] = useState('');\n    const [isEmojiOpen, setIsEmojiOpen] = useState(false);\n    const [isSending, setIsSending] = useState(false);\n    const [selectedImageSrc, setSelectedImageSrc] = useState('');\n    usesta\n\n    const handleChange = ({ target }) => {\n        setTxt(target.value)\n        socketService.emit(SOCKET_EMIT_TYPING, chat)\n    }\n\n    const onSendMsg = () => {\n        if (!selectedImageSrc) {\n            const msg = { txt, from: user, sentAt: Date.now(), viewers: [user._id] };\n            sendMsg(msg);\n            setTxt('');\n        }\n        else{\n\n        }\n    }\n\n    const handlePress = ev => {\n        if (ev.key === \"Enter\")\n            onSendMsg();\n    }\n\n    const addEmoji = (emoji) => {\n        const str = txt + emoji;\n        setTxt(str);\n    }\n\n    const onFileSelected = async (ev) => {\n        try {\n            const file = ev.target.files[0];\n            previewImage(file)\n            setIsSending(true);\n            const url = await chatService.uploadImg(file);\n            const msg = { txt, from: user, sentAt: Date.now(), viewers: [user._id], imgUrl: url }\n            sendMsg(msg);\n            setIsSending(false);\n        } catch (error) {\n            console.log(\"failed in uploading img\");\n            setSelectedImageSrc('');\n        }\n    }\n\n    const previewImage = (file) => {\n        const reader = new FileReader();\n        reader.onload = ({ target }) => {\n            setSelectedImageSrc(target.result)\n        }\n        reader.readAsDataURL(file)\n    }\n\n    return (\n        <div className=\"chat-send-container flex\">\n            <input type=\"text\" className=\"msg-send-txt\" value={txt} onChange={handleChange} placeholder=\"Type your message\" onKeyPress={handlePress} />\n            <div className=\"chat-msg-btns flex\" >\n                <div onClick={() => setIsEmojiOpen(!isEmojiOpen)} className=\"btn-1\"><EmojiEmotionsOutlinedIcon />\n                    {isEmojiOpen && <EmojiBox addEmoji={addEmoji} />}\n                </div>\n                <input type=\"file\" id=\"file\" accept=\"image/*\" onInput={onFileSelected} />\n                <label htmlFor=\"file\" className=\"img-pick-btn\"><ImageIcon /></label>\n                <button className=\"btn-3\" onClick={onSendMsg}><SendOutlinedIcon className=\"send-icon\" /></button>\n            </div>\n            {isSending && <div className=\"sending-msg-container\">\n                <Loader />\n            </div>}\n            {selectedImageSrc && <img src={selectedImageSrc} />}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}