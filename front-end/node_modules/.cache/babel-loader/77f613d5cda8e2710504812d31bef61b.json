{"ast":null,"code":"import moment from 'moment';\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatTime = timestamp => {\n  if (!timestamp) return null;\n  const timeDiff = Date.now() - timestamp;\n\n  if (timeDiff < _MS_PER_DAY) {\n    return getTime(timestamp);\n  } else if (timeDiff < _MS_PER_DAY * 2) {\n    return 'Yesterday';\n  } else return getFormatedDate(moment(timestamp).calendar());\n};\nexport const getTime = ts => {\n  const date = new Date(ts);\n  let hour = date.getHours();\n  if (hour < 10) hour = '0' + hour;\n  let minutes = date.getMinutes();\n  if (minutes < 10) minutes = '0' + minutes;\n  return hour + ':' + minutes;\n};\n\nconst getFormatedDate = dateStr => {\n  const [day, month, year] = dateStr.split('/');\n};","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/utils/time.js"],"names":["moment","_MS_PER_DAY","formatTime","timestamp","timeDiff","Date","now","getTime","getFormatedDate","calendar","ts","date","hour","getHours","minutes","getMinutes","dateStr","day","month","year","split"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAW,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArC;;AAEA,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAe;AACrC,MAAG,CAACA,SAAJ,EAAe,OAAO,IAAP;AACf,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAaH,SAA9B;;AACA,MAAIC,QAAQ,GAAGH,WAAf,EAA4B;AACxB,WAAOM,OAAO,CAACJ,SAAD,CAAd;AACH,GAFD,MAEO,IAAIC,QAAQ,GAAGH,WAAW,GAAG,CAA7B,EAAgC;AACnC,WAAO,WAAP;AACH,GAFM,MAEA,OAAOO,eAAe,CAACR,MAAM,CAACG,SAAD,CAAN,CAAkBM,QAAlB,EAAD,CAAtB;AACV,CARM;AAUP,OAAO,MAAMF,OAAO,GAAIG,EAAD,IAAQ;AAC3B,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASK,EAAT,CAAb;AACA,MAAIE,IAAI,GAAGD,IAAI,CAACE,QAAL,EAAX;AACA,MAAID,IAAI,GAAG,EAAX,EAAeA,IAAI,GAAG,MAAMA,IAAb;AACf,MAAIE,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAd;AACA,MAAID,OAAO,GAAG,EAAd,EAAkBA,OAAO,GAAG,MAAMA,OAAhB;AAClB,SAAOF,IAAI,GAAG,GAAP,GAAaE,OAApB;AACH,CAPM;;AASP,MAAMN,eAAe,GAAIQ,OAAD,IAAa;AACjC,QAAM,CAACC,GAAD,EAAKC,KAAL,EAAWC,IAAX,IAAmBH,OAAO,CAACI,KAAR,CAAc,GAAd,CAAzB;AACH,CAFD","sourcesContent":["import moment from 'moment'\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatTime = (timestamp) => {\n    if(!timestamp) return null\n    const timeDiff = Date.now() - timestamp\n    if (timeDiff < _MS_PER_DAY) {\n        return getTime(timestamp)\n    } else if (timeDiff < _MS_PER_DAY * 2) {\n        return 'Yesterday'\n    } else return getFormatedDate(moment(timestamp).calendar())\n}\n\nexport const getTime = (ts) => {\n    const date = new Date(ts);\n    let hour = date.getHours();\n    if (hour < 10) hour = '0' + hour;\n    let minutes = date.getMinutes();\n    if (minutes < 10) minutes = '0' + minutes;\n    return hour + ':' + minutes;\n}\n\nconst getFormatedDate = (dateStr) => {\n    const [day,month,year] = dateStr.split('/')\n}\n\n"]},"metadata":{},"sourceType":"module"}