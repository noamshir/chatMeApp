{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/screens/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ChatDetails from '../cmp/chat-details/ChatDetails';\nimport ChatContent from '../cmp/chat/ChatContent';\nimport SideBar from '../cmp/sidebar/SideBar';\nimport { ChatContext } from '../context/chatContext';\nimport { loadChats } from '../store/chat.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n\n  const [currChat, setChat] = useState();\n  const dispatch = useDispatch();\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(document.body.clientWidth);\n  useEffect(() => {\n    loadUserChats();\n    window.addEventListener('resize', () => {\n      setScreenWidth(document.body.clientWidth);\n    });\n    return () => {\n      window.removeEventListener('resize');\n    };\n  }, []);\n\n  const loadUserChats = async () => {\n    dispatch(loadChats());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-app-chat  flex\",\n    children: /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n      value: {\n        currChat,\n        setChat,\n        screenWidth\n      },\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n        chat: currChat,\n        openUserDetails: () => setIsDetailsOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), isDetailsOpen && /*#__PURE__*/_jsxDEV(ChatDetails, {\n        close: () => setIsDetailsOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"gErNPRux+nwFUN9GhSTd0hLKS6Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/screens/Chat.jsx"],"names":["React","useEffect","useState","useDispatch","ChatDetails","ChatContent","SideBar","ChatContext","loadChats","Chat","currChat","setChat","dispatch","isDetailsOpen","setIsDetailsOpen","screenWidth","setScreenWidth","document","body","clientWidth","loadUserChats","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBT,QAAQ,EAApC;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACe,QAAQ,CAACC,IAAT,CAAcC,WAAf,CAA9C;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,aAAa;AACbC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpCN,MAAAA,cAAc,CAACC,QAAQ,CAACC,IAAT,CAAcC,WAAf,CAAd;AACH,KAFD;AAGA,WAAO,MAAM;AACTE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B;AACH,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMH,aAAa,GAAG,YAAY;AAC9BR,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACH,GAFD;;AAGA,sBACI;AAAS,IAAA,SAAS,EAAC,qBAAnB;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAF;AAAYC,QAAAA,OAAZ;AAAqBI,QAAAA;AAArB,OAA7B;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEL,QAAnB;AAA6B,QAAA,eAAe,EAAE,MAAMI,gBAAgB,CAAC,IAAD;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKD,aAAa,iBAAI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,MAAMC,gBAAgB,CAAC,KAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA3BuBL,I;UAEHN,W;;;KAFGM,I","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport ChatDetails from '../cmp/chat-details/ChatDetails'\nimport ChatContent from '../cmp/chat/ChatContent'\nimport SideBar from '../cmp/sidebar/SideBar'\nimport { ChatContext } from '../context/chatContext'\nimport { loadChats } from '../store/chat.action'\nexport default function Chat() {\n    const [currChat, setChat] = useState();\n    const dispatch = useDispatch()\n    const [isDetailsOpen, setIsDetailsOpen] = useState(false)\n    const [screenWidth, setScreenWidth] = useState(document.body.clientWidth)\n    useEffect(() => {\n        loadUserChats();\n        window.addEventListener('resize', () => {\n            setScreenWidth(document.body.clientWidth)\n        });\n        return () => {\n            window.removeEventListener('resize')\n        };\n    }, [])\n\n    const loadUserChats = async () => {\n        dispatch(loadChats());\n    }\n    return (\n        <section className=\"main-app-chat  flex\">\n            <ChatContext.Provider value={{ currChat, setChat, screenWidth }}>\n                <SideBar />\n                <ChatContent chat={currChat} openUserDetails={() => setIsDetailsOpen(true)} />\n                {isDetailsOpen && <ChatDetails close={() => setIsDetailsOpen(false)} />}\n            </ChatContext.Provider>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}