{"ast":null,"code":"import { httpService } from \"./http.service\";\nimport { socketService, SOCKET_EMIT_NEWCHAT } from \"./socket.service\";\nexport const chatService = {\n  addChat,\n  addMsg,\n  getChatsByUser\n};\n\nasync function addChat(chat, id) {\n  try {\n    const addedChat = await httpService.post(\"chat\", chat);\n    const {\n      users\n    } = addedChat;\n    const user = users[0]._id === id ? users[1] : users[0];\n    socketService.emit(SOCKET_EMIT_NEWCHAT, {\n      chat: addedChat,\n      reciver\n    });\n    return addedChat;\n  } catch (error) {\n    console.log(\"error while adding chat to user: \", error);\n  }\n}\n\nasync function getChatsByUser() {\n  try {\n    return await httpService.get(\"chat/user-chats\");\n  } catch (error) {\n    console.log(\"error while getting chats of user: \", error);\n  }\n}\n\nasync function addMsg(msg) {// try {\n  //   const updatedUser = await httpService.put(\"chat\", msg);\n  //   authService.saveUser(updatedUser);\n  //   return updatedUser;\n  // } catch (error) {\n  //   console.log(\"error while updateUser user: \", error);\n  // }\n}","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/services/chat.service.js"],"names":["httpService","socketService","SOCKET_EMIT_NEWCHAT","chatService","addChat","addMsg","getChatsByUser","chat","id","addedChat","post","users","user","_id","emit","reciver","error","console","log","get","msg"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,kBAAnD;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA;AAHyB,CAApB;;AAKP,eAAeF,OAAf,CAAuBG,IAAvB,EAA6BC,EAA7B,EAAiC;AAC/B,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMT,WAAW,CAACU,IAAZ,CAAiB,MAAjB,EAAyBH,IAAzB,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYF,SAAlB;AACA,UAAMG,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,GAAT,KAAiBL,EAAjB,GAAsBG,KAAK,CAAC,CAAD,CAA3B,GAAiCA,KAAK,CAAC,CAAD,CAAnD;AACAV,IAAAA,aAAa,CAACa,IAAd,CAAmBZ,mBAAnB,EAAwC;AAAEK,MAAAA,IAAI,EAAEE,SAAR;AAAmBM,MAAAA;AAAnB,KAAxC;AACA,WAAON,SAAP;AACD,GAND,CAME,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,KAAjD;AACD;AACF;;AAED,eAAeV,cAAf,GAAgC;AAC9B,MAAI;AACF,WAAO,MAAMN,WAAW,CAACmB,GAAZ,CAAgB,iBAAhB,CAAb;AACD,GAFD,CAEE,OAAOH,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,KAAnD;AACD;AACF;;AAED,eAAeX,MAAf,CAAsBe,GAAtB,EAA2B,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["import { httpService } from \"./http.service\";\nimport { socketService, SOCKET_EMIT_NEWCHAT } from \"./socket.service\";\n\nexport const chatService = {\n  addChat,\n  addMsg,\n  getChatsByUser,\n};\nasync function addChat(chat, id) {\n  try {\n    const addedChat = await httpService.post(\"chat\", chat);\n    const { users } = addedChat;\n    const user = users[0]._id === id ? users[1] : users[0];\n    socketService.emit(SOCKET_EMIT_NEWCHAT, { chat: addedChat, reciver });\n    return addedChat;\n  } catch (error) {\n    console.log(\"error while adding chat to user: \", error);\n  }\n}\n\nasync function getChatsByUser() {\n  try {\n    return await httpService.get(\"chat/user-chats\");\n  } catch (error) {\n    console.log(\"error while getting chats of user: \", error);\n  }\n}\n\nasync function addMsg(msg) {\n  // try {\n  //   const updatedUser = await httpService.put(\"chat\", msg);\n  //   authService.saveUser(updatedUser);\n  //   return updatedUser;\n  // } catch (error) {\n  //   console.log(\"error while updateUser user: \", error);\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}