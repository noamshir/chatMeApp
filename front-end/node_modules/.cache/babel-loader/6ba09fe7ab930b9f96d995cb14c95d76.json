{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sign/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport ChatBubbleOutlinedIcon from '@mui/icons-material/ChatBubbleOutlined';\nimport PersonOutlineSharpIcon from '@mui/icons-material/PersonOutlineSharp';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\nimport LocalPhoneOutlinedIcon from '@mui/icons-material/LocalPhoneOutlined';\nimport Error from './Error';\nimport { login, signup } from '../../store/user.action';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignIn(_ref) {\n  _s();\n\n  let {\n    isLogin\n  } = _ref;\n  const dispatch = useDispatch();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const LoginSchema = Yup.object().shape({\n    username: Yup.string().min(4, 'Invalid username.').max(12, 'Invalid username.').required('Required'),\n    password: Yup.string().min(4, 'Invalid password').max(12, 'Invalid password').required('Required')\n  });\n  const RegisterSchema = Yup.object().shape({\n    username: Yup.string().min(4, 'Invalid username.').max(12, 'Invalid username.').required('Required'),\n    password: Yup.string().min(4, 'Invalid password').max(12, 'Invalid password').required('Required'),\n    phone: Yup.string().min(10, 'Invalid Phone').max(12, 'Invalid Phone').required('Required')\n  });\n  const ValidationSchema = isLogin ? LoginSchema : RegisterSchema;\n\n  const Login = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"sign-title\",\n        children: \"Sign in to chatMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChatBubbleOutlinedIcon, {\n        className: \"chat-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  const Register = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"sign-title\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PersonAddAlt1OutlinedIcon, {\n        className: \"chat-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  let initialValues = {\n    username: '',\n    password: '',\n    phone: ''\n  };\n  let btnText = 'Login';\n  if (!isLogin) btnText = 'Register';\n\n  const handleSubmit = async values => {\n    setLoading(true);\n\n    if (isLogin) {\n      delete values.phone;\n      const ans = await dispatch(login(values));\n      if (!ans) setError(\"Invalid username or password\");\n    } else {\n      const ans = dispatch(signup(values));\n      if (!ans) setError(\"Invalid username or password\");\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login flex column\",\n    children: [isLogin ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: ValidationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"login-form flex column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-item flex column\",\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: Error,\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field flex\",\n            children: [/*#__PURE__*/_jsxDEV(PersonOutlineSharpIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              placeholder: \"Enter username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-item flex column\",\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: Error,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field flex\",\n            children: [/*#__PURE__*/_jsxDEV(LockOutlinedIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Enter password\",\n              onC: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), isLogin !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-item flex column\",\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: Error,\n            name: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field flex\",\n            children: [/*#__PURE__*/_jsxDEV(LocalPhoneOutlinedIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"phone\",\n              type: \"tel\",\n              placeholder: \"Enter phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sign-submit\",\n          type: \"submit\",\n          children: btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), loading && !error && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }, this), !loading && error && /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"jIcJJvn8p5O2fTDBmYOkZh20BT0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/sign/SignIn.jsx"],"names":["React","useState","useDispatch","Formik","Form","Field","ErrorMessage","Yup","ChatBubbleOutlinedIcon","PersonOutlineSharpIcon","LockOutlinedIcon","PersonAddAlt1OutlinedIcon","LocalPhoneOutlinedIcon","Error","login","signup","Loader","SignIn","isLogin","dispatch","error","setError","loading","setLoading","LoginSchema","object","shape","username","string","min","max","required","password","RegisterSchema","phone","ValidationSchema","Login","Register","initialValues","btnText","handleSubmit","values","ans"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport ChatBubbleOutlinedIcon from '@mui/icons-material/ChatBubbleOutlined';\nimport PersonOutlineSharpIcon from '@mui/icons-material/PersonOutlineSharp';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\nimport LocalPhoneOutlinedIcon from '@mui/icons-material/LocalPhoneOutlined';\n\nimport Error from './Error';\nimport { login, signup } from '../../store/user.action';\nimport Loader from '../Loader';\n\nexport default function SignIn({ isLogin }) {\n    const dispatch = useDispatch();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const LoginSchema = Yup.object().shape({\n        username: Yup.string()\n            .min(4, 'Invalid username.')\n            .max(12, 'Invalid username.')\n            .required('Required'),\n        password: Yup.string()\n            .min(4, 'Invalid password')\n            .max(12, 'Invalid password')\n            .required('Required'),\n    });\n    const RegisterSchema = Yup.object().shape({\n        username: Yup.string()\n            .min(4, 'Invalid username.')\n            .max(12, 'Invalid username.')\n            .required('Required'),\n        password: Yup.string()\n            .min(4, 'Invalid password')\n            .max(12, 'Invalid password')\n            .required('Required'),\n        phone: Yup.string()\n            .min(10, 'Invalid Phone')\n            .max(12, 'Invalid Phone')\n            .required('Required'),\n    });\n    const ValidationSchema = isLogin ? LoginSchema : RegisterSchema\n    const Login = () => {\n        return (<>\n            <h1 className=\"sign-title\">Sign in to chatMe</h1>\n            <ChatBubbleOutlinedIcon className=\"chat-icon\" />\n        </>)\n    }\n    const Register = () => {\n        return (<>\n            <h1 className=\"sign-title\">Create Account</h1>\n            <PersonAddAlt1OutlinedIcon className=\"chat-icon\" />\n        </>)\n    }\n    let initialValues = {\n        username: '',\n        password: '',\n        phone: ''\n    }\n    let btnText = 'Login'\n    if (!isLogin) btnText = 'Register'\n\n    const handleSubmit = async (values) => {\n        setLoading(true)\n        if (isLogin) {\n            delete values.phone;\n            const ans = await dispatch(login(values));\n            if (!ans) setError(\"Invalid username or password\");\n        }\n        else {\n            const ans = dispatch(signup(values));\n            if (!ans) setError(\"Invalid username or password\");\n        }\n        setLoading(false);\n    }\n    return (\n        <section className=\"login flex column\">\n            {isLogin ? <Login /> : <Register />}\n            <Formik\n                initialValues={initialValues}\n                validationSchema={ValidationSchema}\n                onSubmit={handleSubmit}\n            >\n                <Form className=\"login-form flex column\">\n                    <div className=\"input-item flex column\">\n                        <ErrorMessage component={Error} name=\"username\" />\n                        <div className=\"input-field flex\">\n                            <PersonOutlineSharpIcon className=\"icon\" />\n                            <Field name=\"username\" placeholder=\"Enter username\" />\n                        </div>\n                    </div>\n                    <div className=\"input-item flex column\">\n                        <ErrorMessage component={Error} name=\"password\" />\n                        <div className=\"input-field flex\">\n                            <LockOutlinedIcon className=\"icon\" />\n                            <Field name=\"password\" type=\"password\" placeholder=\"Enter password\" onC />\n                        </div>\n                    </div >\n                    {isLogin !== true &&\n                        <div className=\"input-item flex column\">\n                            <ErrorMessage component={Error} name=\"phone\" />\n                            <div className=\"input-field flex\">\n                                <LocalPhoneOutlinedIcon className=\"icon\" />\n                                <Field name=\"phone\" type=\"tel\" placeholder=\"Enter phone number\" />\n                            </div>\n                        </div >\n                    }\n                    <button className=\"sign-submit\" type=\"submit\">{btnText}</button>\n                </Form>\n            </Formik >\n            {(loading && !error) && <Loader />}\n            {(!loading && error) && <Error>{error}</Error>}\n        </section >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}