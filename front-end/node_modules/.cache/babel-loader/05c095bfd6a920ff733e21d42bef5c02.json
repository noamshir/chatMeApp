{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ChatHeader from './ChatHeader';\nimport ChatList from './ChatList';\nimport ChatMsgSend from './ChatMsgSend';\nimport { socketService, SOCKET_EMIT_CONNECTED } from '../../services/socket.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatContent() {\n  _s();\n\n  const [msgs, setMsgs] = useState([]);\n  const user = useSelector(_ref => {\n    let {\n      userModule\n    } = _ref;\n    return userModule.user;\n  });\n  useEffect(() => {\n    setSockets();\n    return () => {\n      setSocketsOff();\n    };\n  }, []);\n\n  const setSockets = () => {\n    socketService.emit(SOCKET_EMIT_CONNECTED, {\n      id: user._id\n    });\n  };\n\n  const setSocketsOff = () => {};\n\n  const addMsg = txt => {\n    const msg = {\n      txt\n    };\n    socketService.setMsgs([...msgs, msg]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat flex column\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n      msgs: msgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatMsgSend, {\n      sendMsg: addMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatContent, \"ycKo+Nx/+rmsj4mute+0lrCqRdI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContent\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/chat/ChatContent.jsx"],"names":["React","useState","useEffect","useSelector","ChatHeader","ChatList","ChatMsgSend","socketService","SOCKET_EMIT_CONNECTED","ChatContent","msgs","setMsgs","user","userModule","setSockets","setSocketsOff","emit","id","_id","addMsg","txt","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,+BAArD;;AAGA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,IAAI,GAAGT,WAAW,CAAC;AAAA,QAAC;AAAEU,MAAAA;AAAF,KAAD;AAAA,WAAoBA,UAAU,CAACD,IAA/B;AAAA,GAAD,CAAxB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACV,WAAO,MAAM;AACTC,MAAAA,aAAa;AAChB,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMD,UAAU,GAAG,MAAM;AACrBP,IAAAA,aAAa,CAACS,IAAd,CAAmBR,qBAAnB,EAA0C;AAAES,MAAAA,EAAE,EAAEL,IAAI,CAACM;AAAX,KAA1C;AACH,GAFD;;AAGA,QAAMH,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAGA,QAAMI,MAAM,GAAIC,GAAD,IAAS;AACpB,UAAMC,GAAG,GAAG;AAAED,MAAAA;AAAF,KAAZ;AACAb,IAAAA,aAAa,CACbI,OADA,CACQ,CAAC,GAAGD,IAAJ,EAAUW,GAAV,CADR;AAEH,GAJD;;AAKA,sBACI;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEX;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAES;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3BuBV,W;UAEPN,W;;;KAFOM,W","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ChatHeader from './ChatHeader'\nimport ChatList from './ChatList'\nimport ChatMsgSend from './ChatMsgSend'\n\nimport { socketService, SOCKET_EMIT_CONNECTED } from '../../services/socket.service'\n\n\nexport default function ChatContent() {\n    const [msgs, setMsgs] = useState([]);\n    const user = useSelector(({ userModule }) => userModule.user)\n    useEffect(() => {\n        setSockets()\n        return () => {\n            setSocketsOff();\n        }\n    }, [])\n    const setSockets = () => {\n        socketService.emit(SOCKET_EMIT_CONNECTED, { id: user._id })\n    }\n    const setSocketsOff = () => {\n\n    }\n    const addMsg = (txt) => {\n        const msg = { txt };\n        socketService.\n        setMsgs([...msgs, msg]);\n    }\n    return (\n        <section className=\"chat flex column\">\n            <ChatHeader />\n            <ChatList msgs={msgs} />\n            <ChatMsgSend sendMsg={addMsg} />\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}