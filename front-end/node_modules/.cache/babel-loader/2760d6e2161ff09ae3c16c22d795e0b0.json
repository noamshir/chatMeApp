{"ast":null,"code":"export const utilService = {\n  getUnreadMsgCount,\n  markAllAsRead\n};\n\nfunction getUnreadMsgCount(msgs, userId) {\n  var count = 0;\n  msgs.forEach(msg => {\n    if (!msg.viewers || !msg.viewers.length) {\n      count++;\n    } else {\n      const ans = msg.viewers.find(viewer => {\n        return viewer === userId;\n      });\n      console.log;\n      if (ans) return;\n      count++;\n    }\n  });\n  return count;\n}\n\nfunction markAllAsRead(msgs, userId) {\n  return msgs.map(msg => {\n    const isViewer = msg.viewers.find(viewer => viewer === userId);\n    if (isViewer) return msg;\n    return { ...msg,\n      viewers: [...msg.viewers, userId]\n    };\n  });\n}","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/services/util.service.js"],"names":["utilService","getUnreadMsgCount","markAllAsRead","msgs","userId","count","forEach","msg","viewers","length","ans","find","viewer","console","log","map","isViewer"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,iBADyB;AAEzBC,EAAAA;AAFyB,CAApB;;AAKP,SAASD,iBAAT,CAA2BE,IAA3B,EAAiCC,MAAjC,EAAyC;AACvC,MAAIC,KAAK,GAAG,CAAZ;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAcC,GAAD,IAAS;AACpB,QAAI,CAACA,GAAG,CAACC,OAAL,IAAgB,CAACD,GAAG,CAACC,OAAJ,CAAYC,MAAjC,EAAyC;AACvCJ,MAAAA,KAAK;AACN,KAFD,MAEO;AACL,YAAMK,GAAG,GAAGH,GAAG,CAACC,OAAJ,CAAYG,IAAZ,CAAkBC,MAAD,IAAY;AACvC,eAAOA,MAAM,KAAKR,MAAlB;AACD,OAFW,CAAZ;AAGAS,MAAAA,OAAO,CAACC,GAAR;AACA,UAAIJ,GAAJ,EAAS;AACTL,MAAAA,KAAK;AACN;AACF,GAXD;AAYA,SAAOA,KAAP;AACD;;AAED,SAASH,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AACnC,SAAOD,IAAI,CAACY,GAAL,CAAUR,GAAD,IAAS;AACvB,UAAMS,QAAQ,GAAGT,GAAG,CAACC,OAAJ,CAAYG,IAAZ,CAAkBC,MAAD,IAAYA,MAAM,KAAKR,MAAxC,CAAjB;AACA,QAAIY,QAAJ,EAAc,OAAOT,GAAP;AACd,WAAO,EAAE,GAAGA,GAAL;AAAUC,MAAAA,OAAO,EAAE,CAAC,GAAGD,GAAG,CAACC,OAAR,EAAiBJ,MAAjB;AAAnB,KAAP;AACD,GAJM,CAAP;AAKD","sourcesContent":["export const utilService = {\n  getUnreadMsgCount,\n  markAllAsRead,\n};\n\nfunction getUnreadMsgCount(msgs, userId) {\n  var count = 0;\n  msgs.forEach((msg) => {\n    if (!msg.viewers || !msg.viewers.length) {\n      count++;\n    } else {\n      const ans = msg.viewers.find((viewer) => {\n        return viewer === userId;\n      });\n      console.log\n      if (ans) return;\n      count++;\n    }\n  });\n  return count;\n}\n\nfunction markAllAsRead(msgs, userId) {\n  return msgs.map((msg) => {\n    const isViewer = msg.viewers.find((viewer) => viewer === userId);\n    if (isViewer) return msg;\n    return { ...msg, viewers: [...msg.viewers, userId] };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}