{"ast":null,"code":"import { httpService } from \"./http.service\";\nconst Route = \"auth\";\nconst STORAGE_KEY_LOGGEDIN = \"loggedUser\";\n\nasync function login(user) {\n  try {\n    const loggedUser = await httpService.post(`${Route}/login`, user);\n\n    if (loggedUser) {\n      sessionStorage.setItem(STORAGE_KEY_LOGGEDIN, JSON.stringify(loggedUser));\n    }\n\n    return loggedUser;\n  } catch (error) {\n    console.log(\"error while login: \", error);\n  }\n}\n\nasync function signup(user) {\n  const newUser = await httpService.post(`${Route}/signup`, user);\n\n  if (newUser) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN, JSON.stringify(newUser));\n  }\n\n  return newUser;\n}\n\nasync function logout() {\n  await httpService.post(`${Route}/logout`);\n  sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN);\n}\n\nexport const authService = {\n  login,\n  signup,\n  log\n};","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/services/auth.service.js"],"names":["httpService","Route","STORAGE_KEY_LOGGEDIN","login","user","loggedUser","post","sessionStorage","setItem","JSON","stringify","error","console","log","signup","newUser","logout","removeItem","authService"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,KAAK,GAAG,MAAd;AACA,MAAMC,oBAAoB,GAAG,YAA7B;;AAEA,eAAeC,KAAf,CAAqBC,IAArB,EAA2B;AACzB,MAAI;AACF,UAAMC,UAAU,GAAG,MAAML,WAAW,CAACM,IAAZ,CAAkB,GAAEL,KAAM,QAA1B,EAAmCG,IAAnC,CAAzB;;AACA,QAAIC,UAAJ,EAAgB;AACdE,MAAAA,cAAc,CAACC,OAAf,CAAuBN,oBAAvB,EAA6CO,IAAI,CAACC,SAAL,CAAeL,UAAf,CAA7C;AACD;;AACD,WAAOA,UAAP;AACD,GAND,CAME,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACD;AACF;;AAED,eAAeG,MAAf,CAAsBV,IAAtB,EAA4B;AAC1B,QAAMW,OAAO,GAAG,MAAMf,WAAW,CAACM,IAAZ,CAAkB,GAAEL,KAAM,SAA1B,EAAoCG,IAApC,CAAtB;;AACA,MAAIW,OAAJ,EAAa;AACXR,IAAAA,cAAc,CAACC,OAAf,CAAuBN,oBAAvB,EAA6CO,IAAI,CAACC,SAAL,CAAeK,OAAf,CAA7C;AACD;;AACD,SAAOA,OAAP;AACD;;AAED,eAAeC,MAAf,GAAwB;AACtB,QAAMhB,WAAW,CAACM,IAAZ,CAAkB,GAAEL,KAAM,SAA1B,CAAN;AACAM,EAAAA,cAAc,CAACU,UAAf,CAA0Bf,oBAA1B;AACD;;AAED,OAAO,MAAMgB,WAAW,GAAG;AACzBf,EAAAA,KADyB;AAEzBW,EAAAA,MAFyB;AAGzBD,EAAAA;AAHyB,CAApB","sourcesContent":["import { httpService } from \"./http.service\";\n\nconst Route = \"auth\";\nconst STORAGE_KEY_LOGGEDIN = \"loggedUser\";\n\nasync function login(user) {\n  try {\n    const loggedUser = await httpService.post(`${Route}/login`, user);\n    if (loggedUser) {\n      sessionStorage.setItem(STORAGE_KEY_LOGGEDIN, JSON.stringify(loggedUser));\n    }\n    return loggedUser;\n  } catch (error) {\n    console.log(\"error while login: \", error);\n  }\n}\n\nasync function signup(user) {\n  const newUser = await httpService.post(`${Route}/signup`, user);\n  if (newUser) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN, JSON.stringify(newUser));\n  }\n  return newUser;\n}\n\nasync function logout() {\n  await httpService.post(`${Route}/logout`);\n  sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN);\n}\n\nexport const authService = {\n  login,\n  signup,\n  log\n};\n"]},"metadata":{},"sourceType":"module"}