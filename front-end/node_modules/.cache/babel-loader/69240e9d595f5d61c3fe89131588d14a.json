{"ast":null,"code":"var _jsxFileName = \"/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/profile/UserProfileImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { socketService, SOCKET_EMIT_CHECK_USER_CONNECTED, SOCKET_ON_USER_OFFLINE, SOCKET_ON_USER_ONLINE } from '../../services/socket.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserProfileImage(_ref) {\n  _s();\n\n  let {\n    user,\n    isLarge = false,\n    withDot = true\n  } = _ref;\n  const [isOnline, setIsOnline] = useState(false);\n  useEffect(() => {\n    setSockets();\n    return () => {\n      disableSockets();\n    };\n  }, []);\n\n  const setSockets = () => {\n    socketService.emit(SOCKET_EMIT_CHECK_USER_CONNECTED, user._id);\n    socketService.on(SOCKET_ON_USER_ONLINE, userId => {\n      if (user._id === userId) setIsOnline(true);\n    });\n    socketService.on(SOCKET_ON_USER_OFFLINE, userId => {\n      if (user._id === userId) setIsOnline(false);\n    });\n  };\n\n  const disableSockets = () => {\n    socketService.off(SOCKET_ON_USER_ONLINE);\n    socketService.off(SOCKET_ON_USER_OFFLINE);\n  };\n\n  const onlineClass = isOnline ? \"online\" : \"offline\";\n  const sizeClass = isLarge ? \"large\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user-profile-image ${sizeClass}`,\n    children: [user.imgUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.imgUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.username.charAt(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 58\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `online-status ${sizeClass} ${onlineClass}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserProfileImage, \"iFd7juYMPPzEUcb5MTWapaJ0bu4=\");\n\n_c = UserProfileImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileImage\");","map":{"version":3,"sources":["/Users/noamshirm/Dropbox/Mac/Desktop/PWA/chatMe/front-end/src/cmp/profile/UserProfileImage.jsx"],"names":["React","useEffect","useState","socketService","SOCKET_EMIT_CHECK_USER_CONNECTED","SOCKET_ON_USER_OFFLINE","SOCKET_ON_USER_ONLINE","UserProfileImage","user","isLarge","withDot","isOnline","setIsOnline","setSockets","disableSockets","emit","_id","on","userId","off","onlineClass","sizeClass","imgUrl","username","charAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,gCAAxB,EAA0DC,sBAA1D,EAAkFC,qBAAlF,QAA+G,+BAA/G;;AACA,eAAe,SAASC,gBAAT,OAAqE;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAO,GAAG,KAAlB;AAAyBC,IAAAA,OAAO,GAAG;AAAnC,GAA2C;AAChF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACV,WAAO,MAAM;AACTC,MAAAA,cAAc;AACjB,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMD,UAAU,GAAG,MAAM;AACrBV,IAAAA,aAAa,CAACY,IAAd,CAAmBX,gCAAnB,EAAqDI,IAAI,CAACQ,GAA1D;AACAb,IAAAA,aAAa,CAACc,EAAd,CAAiBX,qBAAjB,EAAyCY,MAAD,IAAY;AAChD,UAAIV,IAAI,CAACQ,GAAL,KAAaE,MAAjB,EAAyBN,WAAW,CAAC,IAAD,CAAX;AAC5B,KAFD;AAGAT,IAAAA,aAAa,CAACc,EAAd,CAAiBZ,sBAAjB,EAA0Ca,MAAD,IAAY;AACjD,UAAIV,IAAI,CAACQ,GAAL,KAAaE,MAAjB,EAAyBN,WAAW,CAAC,KAAD,CAAX;AAC5B,KAFD;AAGH,GARD;;AASA,QAAME,cAAc,GAAG,MAAM;AACzBX,IAAAA,aAAa,CAACgB,GAAd,CAAkBb,qBAAlB;AACAH,IAAAA,aAAa,CAACgB,GAAd,CAAkBd,sBAAlB;AACH,GAHD;;AAKA,QAAMe,WAAW,GAAGT,QAAQ,GAAG,QAAH,GAAc,SAA1C;AACA,QAAMU,SAAS,GAAGZ,OAAO,GAAG,OAAH,GAAa,EAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,sBAAqBY,SAAU,EAAhD;AAAA,eACMb,IAAI,CAACc,MAAN,gBAAgB;AAAK,MAAA,GAAG,EAAEd,IAAI,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,YAAhB,gBAA4C;AAAA,gBAAKd,IAAI,CAACe,QAAL,CAAcC,MAAd,CAAqB,CAArB;AAAL;AAAA;AAAA;AAAA;AAAA,YADjD,eAEK;AAAG,MAAA,SAAS,EAAG,iBAAgBH,SAAU,IAAGD,WAAY;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjCuBb,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { socketService, SOCKET_EMIT_CHECK_USER_CONNECTED, SOCKET_ON_USER_OFFLINE, SOCKET_ON_USER_ONLINE } from '../../services/socket.service';\nexport default function UserProfileImage({ user, isLarge = false, withDot = true }) {\n    const [isOnline, setIsOnline] = useState(false);\n\n    useEffect(() => {\n        setSockets()\n        return () => {\n            disableSockets()\n        }\n    }, [])\n\n    const setSockets = () => {\n        socketService.emit(SOCKET_EMIT_CHECK_USER_CONNECTED, user._id);\n        socketService.on(SOCKET_ON_USER_ONLINE, (userId) => {\n            if (user._id === userId) setIsOnline(true);\n        })\n        socketService.on(SOCKET_ON_USER_OFFLINE, (userId) => {\n            if (user._id === userId) setIsOnline(false);\n        })\n    }\n    const disableSockets = () => {\n        socketService.off(SOCKET_ON_USER_ONLINE)\n        socketService.off(SOCKET_ON_USER_OFFLINE)\n    }\n\n    const onlineClass = isOnline ? \"online\" : \"offline\";\n    const sizeClass = isLarge ? \"large\" : \"\";\n\n    return (\n        <div className={`user-profile-image ${sizeClass}`}>\n            {(user.imgUrl) ? <img src={user.imgUrl} /> : <h1>{user.username.charAt(0)}</h1>}\n           { <i className={`online-status ${sizeClass} ${onlineClass}`}></i>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}